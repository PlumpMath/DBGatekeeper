/* tslint:disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v10.3.6318.21853 (NJsonSchema v8.31.6318.20479) (http://NSwag.org)
// </auto-generated>
//----------------------
"use strict";

//---------------------- Checksum Client --------------------------------
var ChecksumClient = (function () {
    function ChecksumClient(baseUrl, http) {
        this.jsonParseReviver = undefined;
        this.baseUrl = baseUrl ? baseUrl : "";
        this.http = http ? http : window;
    }
    ChecksumClient.prototype.post = function (value) {
        var _this = this;
        var url_ = this.baseUrl + "/api/Checksum";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(value);
        var options_ = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json; charset=UTF-8",
                "Accept": "application/json; charset=UTF-8"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
			return _this.processPost(_response);
        });
    };
    ChecksumClient.prototype.processPost = function (response) {
        var _this = this;
        var status = response.status;
        if (status === 200) {
            return response.text().then(function (responseText) {
                var result200 = null;
                var resultData200 = responseText === "" ? null : JSON.parse(responseText, _this.jsonParseReviver);
                if (resultData200) {
                    result200 = {};
                    for (var key in resultData200) {
                        if (resultData200.hasOwnProperty(key))
                            result200[key] = resultData200[key] !== undefined ? resultData200[key] : null;
                    }
                }
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (responseText) {
                return console.log("An unexpected server error occurred");
            });
        }        
    };
    return ChecksumClient;
}());

//---------------------- Patient Client --------------------------------
var PatientClient = (function () {
    function PatientClient(baseUrl, http) {
        this.jsonParseReviver = undefined;
        this.baseUrl = baseUrl ? baseUrl : "";
        this.http = http ? http : window;
    }
    PatientClient.prototype.post = function (value) {
        var _this = this;
        var url_ = this.baseUrl + "/api/Patient";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(value);
        var options_ = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json; charset=UTF-8",
                "Accept": "application/json; charset=UTF-8"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
			return _this.processPost(_response);
        });
    };
    PatientClient.prototype.processPost = function (response) {
        var _this = this;
        var status = response.status;
        if (status === 200) {
            return response.text().then(function (responseText) {
                var result200 = null;
                var resultData200 = responseText === "" ? null : JSON.parse(responseText, _this.jsonParseReviver);
                if (resultData200) {
                    result200 = {};
                    for (var key in resultData200) {
                        if (resultData200.hasOwnProperty(key))
                            result200[key] = resultData200[key] !== undefined ? resultData200[key] : null;
                    }
                }
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (responseText) {
                return console.log("An unexpected server error occurred");
            });
        }        
    };
    return PatientClient;
}());

//---------------------- Study Client --------------------------------
var StudyClient = (function () {
    function StudyClient(baseUrl, http) {
        this.jsonParseReviver = undefined;
        this.baseUrl = baseUrl ? baseUrl : "";
        this.http = http ? http : window;
    }
    StudyClient.prototype.post = function (value) {
        var _this = this;
        var url_ = this.baseUrl + "/api/Patient";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(value);
        var options_ = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json; charset=UTF-8",
                "Accept": "application/json; charset=UTF-8"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
			return _this.processPost(_response);
        });
    };
    StudyClient.prototype.processPost = function (response) {
        var _this = this;
        var status = response.status;
        if (status === 200) {
            return response.text().then(function (responseText) {
                var result200 = null;
                var resultData200 = responseText === "" ? null : JSON.parse(responseText, _this.jsonParseReviver);
                if (resultData200) {
                    result200 = {};
                    for (var key in resultData200) {
                        if (resultData200.hasOwnProperty(key))
                            result200[key] = resultData200[key] !== undefined ? resultData200[key] : null;
                    }
                }
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (responseText) {
                return console.log("An unexpected server error occurred");
            });
        }        
    };
    return StudyClient;
}());


//var client = new ChecksumClient("http://localhost:11352");
//		client.post(
//		{
//			"SQLString" : "Select Top 1 * From PatientInformation",
//			"EntityType" : "Patient",
//			"EthereumAddress" : "0x2345t6y8uher4867ouijr87tgyi"
//		}).then(function(Json)
//		{
//			console.log(Json.Checksum);
//		});